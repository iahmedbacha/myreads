{"version":3,"sources":["utils/BooksAPI.js","components/ListBooksTitle.js","components/BookshelfTitle.js","components/BookCover.js","components/BookShelfChanger.js","components/BookTop.js","components/BookTitle.js","components/BookAuthors.js","components/Book.js","components/BooksGrid.js","components/BookshelfBooks.js","components/Bookshelf.js","components/ListBooksContent.js","components/OpenSearch.js","components/ListBooks.js","components/CloseSearch.js","components/SearchBooksInputWrapper.js","components/SearchBooksBar.js","components/SearchBooksResults.js","components/SearchBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","id","method","body","JSON","stringify","then","res","json","search","query","data","books","ListBooksTitle","props","title","className","BookshelfTitle","BookCover","thumbnail","style","width","height","backgroundImage","defaultProps","BookShelfChanger","handleBookShelfOnChange","event","target","value","this","onChange","defaultValue","disabled","Component","BookTop","BookTitle","BookAuthors","authors","join","Book","imageLinks","BooksGrid","map","key","BookshelfBooks","Bookshelf","ListBooksContent","filter","OpenSearch","to","type","ListBooks","CloseSearch","handleCloseSearch","onClick","SearchBooksInputWrapper","handleSearchBooksInputOnChange","searchBooksInputValue","placeholder","SearchBooksBar","SearchBooksResults","SearchBooks","BooksApp","state","searchBooks","debounce","BooksAPI","Array","isArray","setState","currentState","b","length","searchBook","includes","currentlyReading","wantToRead","read","updateBook","exact","path","handleOpenSearch","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98ae6a9a.chunk.js","sourcesContent":["const api = 'https://reactnd-books-api.udacity.com';\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet { token } = localStorage;\r\nif (!token) {\r\n  localStorage.token = Math.random()\r\n    .toString(36)\r\n    .substr(-8);\r\n  token = localStorage.token;\r\n}\r\n\r\nconst headers = {\r\n  Accept: 'application/json',\r\n  Authorization: token\r\n};\r\n\r\nexport const get = bookId =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json());\r\n\r\nexport const search = query =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  })\r\n    .then(res => res.json())\r\n    .then(data => data.books);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListBooksTitle = props => {\r\n  const { title } = props;\r\n  return (\r\n    <div className=\"list-books-title\">\r\n      <h1>{title}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nListBooksTitle.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ListBooksTitle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BookshelfTitle = props => {\r\n  const { title } = props;\r\n  return <h2 className=\"bookshelf-title\">{title}</h2>;\r\n};\r\n\r\nBookshelfTitle.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BookshelfTitle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BookCover = props => {\r\n  const { thumbnail } = props;\r\n  return (\r\n    <div\r\n      className=\"book-cover\"\r\n      style={{\r\n        width: 128,\r\n        height: 193,\r\n        backgroundImage: `url(\"${thumbnail}\")`\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nBookCover.propTypes = {\r\n  thumbnail: PropTypes.string\r\n};\r\n\r\nBookCover.defaultProps = {\r\n  thumbnail: ''\r\n};\r\n\r\nexport default BookCover;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BookShelfChanger extends Component {\r\n  static propTypes = {\r\n    handleBookShelfOnChange: PropTypes.func.isRequired,\r\n    shelf: PropTypes.string.isRequired\r\n  };\r\n\r\n  handleBookShelfOnChange = event => {\r\n    const { handleBookShelfOnChange } = this.props;\r\n    handleBookShelfOnChange(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    const { shelf } = this.props;\r\n    return (\r\n      <div className=\"book-shelf-changer\">\r\n        <select onChange={this.handleBookShelfOnChange} defaultValue={shelf}>\r\n          <option value=\"move\" disabled>\r\n            Move to...\r\n          </option>\r\n          <option value=\"currentlyReading\">Currently Reading</option>\r\n          <option value=\"wantToRead\">Want to Read</option>\r\n          <option value=\"read\">Read</option>\r\n          <option value=\"none\">None</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookShelfChanger;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BookCover from './BookCover';\r\nimport BookShelfChanger from './BookShelfChanger';\r\n\r\nconst BookTop = props => {\r\n  const { thumbnail, handleBookShelfOnChange, shelf } = props;\r\n  return (\r\n    <div className=\"book-top\">\r\n      <BookCover thumbnail={thumbnail} />\r\n      <BookShelfChanger\r\n        handleBookShelfOnChange={handleBookShelfOnChange}\r\n        shelf={shelf}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nBookTop.propTypes = {\r\n  thumbnail: PropTypes.string,\r\n  handleBookShelfOnChange: PropTypes.func.isRequired,\r\n  shelf: PropTypes.string.isRequired\r\n};\r\n\r\nBookTop.defaultProps = {\r\n  thumbnail: ''\r\n};\r\n\r\nexport default BookTop;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BookTitle = props => {\r\n  const { title } = props;\r\n  return <div className=\"book-title\">{title}</div>;\r\n};\r\n\r\nBookTitle.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BookTitle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BookAuthors = props => {\r\n  const { authors } = props;\r\n  return <div className=\"book-authors\">{authors.join(', ')}</div>;\r\n};\r\n\r\nBookAuthors.propTypes = {\r\n  authors: PropTypes.arrayOf(PropTypes.string)\r\n};\r\n\r\nBookAuthors.defaultProps = {\r\n  authors: []\r\n};\r\n\r\nexport default BookAuthors;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BookTop from './BookTop';\r\nimport BookTitle from './BookTitle';\r\nimport BookAuthors from './BookAuthors';\r\n\r\nclass Book extends Component {\r\n  static propTypes = {\r\n    book: PropTypes.shape({\r\n      imageLinks: PropTypes.shape({\r\n        thumbnail: PropTypes.string\r\n      }),\r\n      shelf: PropTypes.string,\r\n      title: PropTypes.string.isRequired,\r\n      authors: PropTypes.array\r\n    }).isRequired,\r\n    handleBookShelfOnChange: PropTypes.func.isRequired\r\n  };\r\n\r\n  handleBookShelfOnChange = shelf => {\r\n    const { handleBookShelfOnChange, book } = this.props;\r\n    handleBookShelfOnChange(book, shelf);\r\n  };\r\n\r\n  render() {\r\n    const { book } = this.props;\r\n    return (\r\n      <li>\r\n        <div className=\"book\">\r\n          <BookTop\r\n            thumbnail={book.imageLinks && book.imageLinks.thumbnail}\r\n            handleBookShelfOnChange={this.handleBookShelfOnChange}\r\n            shelf={book.shelf}\r\n          />\r\n          <BookTitle title={book.title} />\r\n          <BookAuthors authors={book.authors} />\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Book;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Book from './Book';\r\n\r\nconst BooksGrid = props => {\r\n  const { books } = props;\r\n  return (\r\n    <ol className=\"books-grid\">\r\n      {books.map(book => (\r\n        <Book\r\n          key={book.id}\r\n          book={book}\r\n          handleBookShelfOnChange={props.handleBookShelfOnChange}\r\n        />\r\n      ))}\r\n    </ol>\r\n  );\r\n};\r\n\r\nBooksGrid.propTypes = {\r\n  books: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number\r\n    })\r\n  ).isRequired,\r\n  handleBookShelfOnChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default BooksGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BooksGrid from './BooksGrid';\r\n\r\nconst BookshelfBooks = props => {\r\n  const { books, handleBookShelfOnChange } = props;\r\n  return (\r\n    <BooksGrid\r\n      books={books}\r\n      handleBookShelfOnChange={handleBookShelfOnChange}\r\n    />\r\n  );\r\n};\r\n\r\nBookshelfBooks.propTypes = {\r\n  books: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  handleBookShelfOnChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default BookshelfBooks;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BookshelfTitle from './BookshelfTitle';\r\nimport BookshelfBooks from './BookshelfBooks';\r\n\r\nconst Bookshelf = props => {\r\n  const { title, books, handleBookShelfOnChange } = props;\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <BookshelfTitle title={title} />\r\n      <BookshelfBooks\r\n        books={books}\r\n        handleBookShelfOnChange={handleBookShelfOnChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nBookshelf.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  handleBookShelfOnChange: PropTypes.func.isRequired,\r\n  books: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\n\r\nexport default Bookshelf;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Bookshelf from './Bookshelf';\r\n\r\nconst ListBooksContent = props => {\r\n  const { handleBookShelfOnChange, books } = props;\r\n  return (\r\n    <div className=\"list-books-content\">\r\n      <div>\r\n        <Bookshelf\r\n          title=\"Currently Reading\"\r\n          handleBookShelfOnChange={handleBookShelfOnChange}\r\n          books={books.filter(book => book.shelf === 'currentlyReading')}\r\n        />\r\n        <Bookshelf\r\n          title=\"Want to Read\"\r\n          handleBookShelfOnChange={handleBookShelfOnChange}\r\n          books={books.filter(book => book.shelf === 'wantToRead')}\r\n        />\r\n        <Bookshelf\r\n          title=\"Read\"\r\n          handleBookShelfOnChange={handleBookShelfOnChange}\r\n          books={books.filter(book => book.shelf === 'read')}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nListBooksContent.propTypes = {\r\n  books: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  handleBookShelfOnChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ListBooksContent;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst OpenSearch = () => (\r\n  <div className=\"open-search\">\r\n    <Link to=\"/search\">\r\n      <button type=\"button\">Add a book</button>\r\n    </Link>\r\n  </div>\r\n);\r\n\r\nexport default OpenSearch;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListBooksTitle from './ListBooksTitle';\r\nimport ListBooksContent from './ListBooksContent';\r\nimport OpenSearch from './OpenSearch';\r\n\r\nconst ListBooks = props => {\r\n  const { title, books, handleBookShelfOnChange } = props;\r\n  return (\r\n    <div className=\"list-books\">\r\n      <ListBooksTitle title={title} />\r\n      <ListBooksContent\r\n        books={books}\r\n        handleBookShelfOnChange={handleBookShelfOnChange}\r\n      />\r\n      <OpenSearch />\r\n    </div>\r\n  );\r\n};\r\n\r\nListBooks.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  books: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  handleBookShelfOnChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ListBooks;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass CloseSearch extends Component {\r\n  static propTypes = {\r\n    handleCloseSearch: PropTypes.func.isRequired\r\n  };\r\n\r\n  handleCloseSearch = () => {\r\n    const { handleCloseSearch } = this.props;\r\n    handleCloseSearch();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Link to=\"/\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"close-search\"\r\n          onClick={this.handleCloseSearch}\r\n        >\r\n          Close\r\n        </button>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CloseSearch;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SearchBooksInputWrapper extends Component {\r\n  static propTypes = {\r\n    searchBooksInputValue: PropTypes.string.isRequired,\r\n    handleSearchBooksInputOnChange: PropTypes.func.isRequired\r\n  };\r\n\r\n  handleSearchBooksInputOnChange = event => {\r\n    const { handleSearchBooksInputOnChange } = this.props;\r\n    handleSearchBooksInputOnChange(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    const { searchBooksInputValue } = this.props;\r\n    return (\r\n      <div className=\"search-books-input-wrapper\">\r\n        {/*\r\n          NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n          You can find these search terms here:\r\n          https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n          However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n          you don't find a specific author or title. Every search is limited by search terms.\r\n        */}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by title or author\"\r\n          value={searchBooksInputValue}\r\n          onChange={this.handleSearchBooksInputOnChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBooksInputWrapper;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CloseSearch from './CloseSearch';\r\nimport SearchBooksInputWrapper from './SearchBooksInputWrapper';\r\n\r\nconst SearchBooksBar = props => {\r\n  const {\r\n    handleCloseSearch,\r\n    searchBooksInputValue,\r\n    handleSearchBooksInputOnChange\r\n  } = props;\r\n  return (\r\n    <div className=\"search-books-bar\">\r\n      <CloseSearch handleCloseSearch={handleCloseSearch} />\r\n      <SearchBooksInputWrapper\r\n        searchBooksInputValue={searchBooksInputValue}\r\n        handleSearchBooksInputOnChange={handleSearchBooksInputOnChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSearchBooksBar.propTypes = {\r\n  handleCloseSearch: PropTypes.func.isRequired,\r\n  searchBooksInputValue: PropTypes.string.isRequired,\r\n  handleSearchBooksInputOnChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchBooksBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BooksGrid from './BooksGrid';\r\n\r\nconst SearchBooksResults = props => {\r\n  const { books, handleBookShelfOnChange } = props;\r\n  return (\r\n    <div className=\"search-books-results\">\r\n      <BooksGrid\r\n        books={books}\r\n        handleBookShelfOnChange={handleBookShelfOnChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSearchBooksResults.propTypes = {\r\n  books: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  handleBookShelfOnChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchBooksResults;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SearchBooksBar from './SearchBooksBar';\r\nimport SearchBooksResults from './SearchBooksResults';\r\n\r\nconst SearchBooks = props => {\r\n  const {\r\n    handleCloseSearch,\r\n    searchBooksInputValue,\r\n    handleSearchBooksInputOnChange,\r\n    books,\r\n    handleBookShelfOnChange\r\n  } = props;\r\n  return (\r\n    <div className=\"search-books\">\r\n      <SearchBooksBar\r\n        handleCloseSearch={handleCloseSearch}\r\n        searchBooksInputValue={searchBooksInputValue}\r\n        handleSearchBooksInputOnChange={handleSearchBooksInputOnChange}\r\n      />\r\n      <SearchBooksResults\r\n        books={books}\r\n        handleBookShelfOnChange={handleBookShelfOnChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSearchBooks.propTypes = {\r\n  handleCloseSearch: PropTypes.func.isRequired,\r\n  books: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  searchBooksInputValue: PropTypes.string.isRequired,\r\n  handleSearchBooksInputOnChange: PropTypes.func.isRequired,\r\n  handleBookShelfOnChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchBooks;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { debounce } from 'throttle-debounce';\r\nimport * as BooksAPI from './utils/BooksAPI';\r\nimport ListBooks from './components/ListBooks';\r\nimport SearchBooks from './components/SearchBooks';\r\nimport './App.css';\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    /**\r\n     * TODO: Instead of using this state variable to keep track of which page\r\n     * we're on, use the URL in the browser's address bar. This will ensure that\r\n     * users can use the browser's back and forward buttons to navigate between\r\n     * pages, as well as provide a good URL they can bookmark and share.\r\n     */\r\n    books: [],\r\n    searchBooksInputValue: '',\r\n    searchBooks: []\r\n  };\r\n\r\n  searchBooks = debounce(300, searchBooksInputValue => {\r\n    BooksAPI.search(searchBooksInputValue).then(books => {\r\n      if (Array.isArray(books)) {\r\n        this.setState(currentState => {\r\n          return {\r\n            searchBooks: books.map(book => {\r\n              if (currentState.books.filter(b => b.id === book.id).length > 0) {\r\n                return currentState.books.filter(b => b.id === book.id)[0];\r\n              }\r\n              const searchBook = book;\r\n              searchBook.shelf = 'none';\r\n              return searchBook;\r\n            })\r\n          };\r\n        });\r\n      } else {\r\n        this.setState({\r\n          searchBooks: []\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then(books => {\r\n      this.setState({\r\n        books\r\n      });\r\n    });\r\n  }\r\n\r\n  handleCloseSearch = () => {\r\n    this.setState({\r\n      searchBooksInputValue: '',\r\n      searchBooks: []\r\n    });\r\n  };\r\n\r\n  handleBookShelfOnChange = (book, shelf) => {\r\n    BooksAPI.update(book, shelf).then(res => {\r\n      if (\r\n        (res[shelf] && res[shelf].includes(book.id)) ||\r\n        (shelf === 'none' &&\r\n          !res.currentlyReading.includes(book.id) &&\r\n          !res.wantToRead.includes(book.id) &&\r\n          !res.read.includes(book.id))\r\n      ) {\r\n        // update successful\r\n        this.setState(currentState => {\r\n          if (shelf === 'none') {\r\n            return {\r\n              books: currentState.books.filter(b => b.id !== book.id)\r\n            };\r\n          }\r\n          if (currentState.books.filter(b => b.id === book.id).length > 0) {\r\n            return {\r\n              books: currentState.books.map(b => {\r\n                const updateBook = b;\r\n                if (updateBook.id === book.id) {\r\n                  updateBook.shelf = shelf;\r\n                }\r\n                return updateBook;\r\n              })\r\n            };\r\n          }\r\n          const updateBook = book;\r\n          updateBook.shelf = shelf;\r\n          return {\r\n            books: [...currentState.books, updateBook]\r\n          };\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSearchBooksInputOnChange = searchBooksInputValue => {\r\n    this.setState({\r\n      searchBooksInputValue\r\n    });\r\n    if (searchBooksInputValue !== '') {\r\n      this.searchBooks(searchBooksInputValue);\r\n    } else {\r\n      this.setState({\r\n        searchBooks: []\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { books, searchBooks, searchBooksInputValue } = this.state;\r\n    return (\r\n      <div className=\"app\">\r\n        <Route exact path=\"/\">\r\n          <ListBooks\r\n            title=\"MyReads\"\r\n            books={books}\r\n            handleOpenSearch={this.handleOpenSearch}\r\n            handleBookShelfOnChange={this.handleBookShelfOnChange}\r\n          />\r\n        </Route>\r\n        <Route path=\"/search\">\r\n          <SearchBooks\r\n            handleCloseSearch={this.handleCloseSearch}\r\n            books={searchBooks}\r\n            searchBooksInputValue={searchBooksInputValue}\r\n            handleSearchBooksInputOnChange={this.handleSearchBooksInputOnChange}\r\n            handleBookShelfOnChange={this.handleBookShelfOnChange}\r\n          />\r\n        </Route>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}